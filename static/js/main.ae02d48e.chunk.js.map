{"version":3,"sources":["componet/file/File.js","helpers/suffix.js","App.js","reportWebVitals.js","index.js"],"names":["File","_ref","id","name","children","tasks","onAdd","onAddTask","handleDrop","deleteBtn","editLiText","_useState","useState","_useState2","_slicedToArray","edit","setEdit","_useState3","_useState4","value","setValue","_useState5","_useState6","drop","setDrop","_useState7","_useState8","color","setColor","_jsxs","className","onClick","concat","_jsx","onKeyUp","e","target","trim","keyCode","newTask","uuid","enterHandler","stopPropagation","onChange","onDrop","task","JSON","parse","dataTransfer","getData","nativeEvent","onDragOver","preventDefault","onDragLeave","map","item","index","draggable","onDragStart","setData","stringify","idx","_createElement","_objectSpread","key","tree","parentId","App","suffix","setSuffix","clone","result","Number","String","Boolean","forEach","type","Object","prototype","toString","call","child","array","nodeType","cloneNode","Date","i","remapCurrentSuffix","tempSuffix","recursiveMap","level","push","elem","deleteBtnInSuffix","_level$children","find","el","filter","remapCurrentSuffixForTasks","remapCurrentSuffixForDrop","removeTask","_level$tasks","funded","t","onDropTask","childs","parentElement","querySelectorAll","Array","findIndex","li","splice","editLiTextHandler","editId","_level$tasks2","founded","newSuffix","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"2OA+HeA,EA3HF,SAAPA,EAAIC,GAA0F,IAArFC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAMC,EAAQH,EAARG,SAAUC,EAAKJ,EAALI,MAAOC,EAAKL,EAALK,MAAOC,EAASN,EAATM,UAAWC,EAAUP,EAAVO,WAAYC,EAASR,EAATQ,UAAWC,EAAUT,EAAVS,WAC/EC,EAAwBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,EAA0BL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAAwBT,oBAAS,GAAMU,EAAAR,YAAAO,EAAA,GAAhCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAA0Bb,oBAAS,GAAMc,EAAAZ,YAAAW,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GA2CtB,OACIG,eAAA,OAAKC,UAAU,OACVC,QAAS,kBAAMH,GAAS,IAAOxB,SAAA,CAEhCyB,eAAA,OAAKC,UAAS,eAAAE,OAAiBL,GAAS,QACnCI,QAAS,kBAAMH,GAAS,IAAOxB,SAAA,CAEhC6B,cAAA,QAAMH,UAAU,cACVC,QAAS,kBAAMzB,EAAMJ,IAAIE,SAC3B6B,cAAA,KAAGH,UAAU,yBAGjBG,cAAA,QAAMH,UAAU,aACVC,QAAS,kBAAMtB,EAAUP,IAAIE,SAClC6B,cAAA,KAAGH,UAAU,mBAGdG,cAAA,KAAGH,UAAU,YAAW1B,SACnBD,IAEL8B,cAAA,SACIH,UAAU,OACVX,MAAOA,EACPe,QAAS,SAACC,GAAC,OAhEN,SAACA,GAClB,GAA8B,KAA1BA,EAAEC,OAAOjB,MAAMkB,QACf,GAAkB,KAAdF,EAAEG,QACF,GAAIvB,EACAL,EAAWK,EAAMI,GACjBC,EAAS,IACTQ,GAAS,GACTZ,EAAQ,UACL,CACH,IAAMuB,EAAU,CAACrC,GAAIsC,cAAQrC,KAAMgB,GACnCZ,EAAUL,EAAIqC,GACdnB,EAAS,IACTQ,GAAS,SAKjBA,GAAS,GA+Cea,CAAaN,IAC7BJ,QAAS,SAACI,GAAC,OAAKA,EAAEO,mBAClBC,SAAU,SAACR,GACPP,GAAS,GACTR,EAASe,EAAEC,OAAOjB,UAG1Bc,cAAA,MAAIH,UAAS,GAAAE,OAAKT,GAAQ,WACtBqB,OA9CD,SAACT,GACZ,IAAMU,EAAOC,KAAKC,MAAMZ,EAAEa,aAAaC,QAAQ,SAC/CzC,EAAWN,EAAI2C,EAAMV,EAAEe,YAAYd,QACnCZ,GAAQ,IA4CI2B,WAzCG,SAAChB,GAChBA,EAAEiB,iBACF5B,GAAQ,IAwCI6B,YArCS,WACrB7B,GAAQ,IAoCkCpB,SAExB,OAALC,QAAK,IAALA,OAAK,EAALA,EAAOiD,KAAI,SAACC,EAAMC,GACf,OAAO3B,eAAA,MAEH3B,GAAIqD,EAAKrD,GACTuD,WAAW,EACX3B,UAAS,GAAAE,OAAKL,GAAS,QACvB+B,YAAa,SAACvB,GAAC,OA5DnB,SAACA,EAAGU,GACpBV,EAAEa,aAAaW,QAAQ,OAAQb,KAAKc,UAAUf,IA2DNa,CAAYvB,EAAGoB,IAAMnD,SAAA,CAEzC6B,cAAA,QAAA7B,SACKmD,EAAKpD,OAEV8B,cAAA,QAAA7B,SACI6B,cAAA,KAAGH,UAAU,cACVC,QAAS,WACLf,EAAQuC,EAAKrD,IACbQ,EAAW6C,GACXnC,EAASmC,EAAKpD,aAdpBqD,aAqBlBpD,GACH6B,cAAA,OAAKH,UAAU,QAAO1B,SACjBA,EAASkD,KAAI,SAACC,EAAMM,GACjB,OAAOC,wBAAC9D,EAAI+D,wBAAA,GAAKR,GAAI,IACRS,IAAKH,EACLvD,MAAOA,EACPG,UAAWA,EACXF,UAAWA,EACXC,WAAYA,EACZE,WAAYA,cCpHlCuD,EAAQ,CACf/D,GAAIsC,cACArC,KAAM,OACVC,SAAU,CACV,CAACF,GAAIsC,cAAQ0B,SAAU,EAAG/D,KAAM,QAChC,CAACD,GAAIsC,cAAQ0B,SAAU,EAAG/D,KAAM,QAChC,CAACD,GAAIsC,cAAQ0B,SAAU,EAAG/D,KAAM,QAChC,CACID,GAAIsC,cACJ0B,SAAU,EACV/D,KAAM,OACNC,SAAU,CACN,CACIF,GAAIsC,cACJ0B,SAAU,EACV/D,KAAM,WAMlBE,MAAO,ICuLI8D,MAvMf,WACI,IAAAxD,EAA4BC,mBAASqD,GAAKpD,EAAAC,YAAAH,EAAA,GAAnCyD,EAAMvD,EAAA,GAAEwD,EAASxD,EAAA,GAElByD,EAAQ,SAARA,EAASf,GACX,IAAKA,EACD,OAAOA,EAEX,IACIgB,EAQJ,GATY,CAACC,OAAQC,OAAQC,SAGvBC,SAAQ,SAAUC,GAChBrB,aAAgBqB,IAChBL,EAASK,EAAKrB,OAID,oBAAVgB,EACP,GAA6C,mBAAzCM,OAAOC,UAAUC,SAASC,KAAKzB,GAC/BgB,EAAS,GACThB,EAAKoB,SAAQ,SAAUM,EAAOzB,EAAO0B,GACjCX,EAAOf,GAASc,EAAMW,WAEvB,GAAmB,iBAAR1B,GACd,GAAIA,EAAK4B,UAAqC,mBAAlB5B,EAAK6B,UAC7Bb,EAAShB,EAAK6B,WAAU,QACrB,IAAK7B,EAAKuB,UACb,GAAIvB,aAAgB8B,KAChBd,EAAS,IAAIc,KAAK9B,QAGlB,IAAK,IAAI+B,KADTf,EAAS,GACKhB,EACVgB,EAAOe,GAAKhB,EAAMf,EAAK+B,SAKnCf,EAAShB,EAIjB,OAAOgB,GAOLgB,EAAqB,SAACrB,GACxB,IAAMsB,EAAalB,EAAMF,GAiBzB,OAhBqB,SAAfqB,EAAgBC,GACdA,EAAMxF,KAAOgE,EACTwB,EAAMtF,SACNsF,EAAMtF,SAASuF,KAAK,CAACzF,GAAIsC,cAAQ0B,SAAU,EAAG/D,KAAM,SAEpDuF,EAAMtF,SAAW,CAAC,CAACF,GAAIsC,cAAQ0B,SAAU,EAAG/D,KAAM,SAGlDuF,EAAMtF,UACNsF,EAAMtF,SAASuE,SAAQ,SAACiB,GACpBH,EAAaG,MAK7BH,CAAaD,GACNA,GAOLK,EAAoB,SAAC3F,GACvB,IAAMsF,EAAalB,EAAMF,GAgBzB,OAfqB,SAAfqB,EAAgBC,GAAU,IAADI,GACN,OAALJ,QAAK,IAALA,GAAe,QAAVI,EAALJ,EAAOtF,gBAAQ,IAAA0F,OAAV,EAALA,EAAiBC,MAAK,SAACC,GAAE,OAAGA,EAAG9F,KAAOA,MAEnDwF,EAAMtF,SAAWsF,EAAMtF,SAAS6F,QAAO,SAACD,GAAE,OAAIA,EAAG9F,KAAOA,KAEpDwF,EAAMtF,UACLsF,EAAMtF,SAASuE,SAAQ,SAACiB,GACpB,OAAOH,EAAaG,MAOpCH,CAAaD,GACNA,GAOLU,EAA6B,SAAChC,EAAU3B,GAC1C,IAAMiD,EAAalB,EAAMF,GAiBzB,OAhBqB,SAAfqB,EAAgBC,GACdA,EAAMxF,KAAOgE,EACTwB,EAAMrF,MACNqF,EAAMrF,MAAMsF,KAAKpD,GAEjBmD,EAAMrF,MAAQ,CAACkC,GAGfmD,EAAMtF,UACNsF,EAAMtF,SAASuE,SAAQ,SAACiB,GACpBH,EAAaG,MAK7BH,CAAaD,GACNA,GAOLW,EAA4B,SAACjC,EAAUrB,EAAMT,GAE/C,IAiCMoD,EAAalB,EAAMF,GAGzB,OApCmB,SAAbgC,EAAcV,GAAW,IAADW,EACpBC,EAAoB,QAAdD,EAAGX,EAAMrF,aAAK,IAAAgG,OAAA,EAAXA,EAAaN,MAAK,SAACQ,GAAC,OAAKA,EAAErG,KAAO2C,EAAK3C,MAClDoG,EACAZ,EAAMrF,MAAQqF,EAAMrF,MAAM4F,QAAO,SAACM,GAAC,OAAKA,EAAErG,KAAOoG,EAAOpG,MAEpDwF,EAAMtF,UACNsF,EAAMtF,SAASuE,SAAQ,SAACiB,GACpBQ,EAAWR,MA2B3BQ,CAAWZ,GApBQ,SAAbgB,EAAcd,GACZ,GAAIA,EAAMxF,KAAOgE,EACjB,GAAIwB,EAAMrF,MAAO,CACb,IACMoG,EADKrE,EAAOsE,cACAC,iBAAiB,MAC7BnD,EAAQoD,MAAM9B,UAAU+B,UAAU7B,KAAKyB,GAAQ,SAACK,GAAE,OAAKA,EAAG5G,KAAOkC,EAAOlC,MAC9EwF,EAAMrF,MAAM0G,OAAOvD,EAAO,EAAGX,QAE7B6C,EAAMrF,MAAQ,CAACwC,QAGf6C,EAAMtF,UACNsF,EAAMtF,SAASuE,SAAQ,SAACiB,GACpBY,EAAWZ,MAQ3BY,CAAWhB,GACJA,GAOLwB,EAAoB,SAACC,EAAO9F,GAC7B,IAAMqE,EAAalB,EAAMF,GAe1B,OAbqB,SAAfqB,EAAgBC,GAAW,IAADwB,EACrBC,EAAqB,QAAdD,EAAGxB,EAAMrF,aAAK,IAAA6G,OAAA,EAAXA,EAAanB,MAAK,SAACC,GAAE,OAAGA,EAAG9F,KAAO+G,KAC/CE,EACAA,EAAQhH,KAAOgB,EAEXuE,EAAMtF,UACNsF,EAAMtF,SAASuE,SAAQ,SAACiB,GACpBH,EAAaG,MAK7BH,CAAaD,GACNA,GAKX,OACIvD,cAAA,OAAKH,UAAU,MAAK1B,SAChB6B,cAACjC,EAAI+D,wBAAA,GAAKK,GAAM,IACV9D,MAnJA,SAACJ,GACX,IAAMkH,EAAY7B,EAAmBrF,GACrCmE,EAAU+C,IAkJA3G,UA3HI,SAACP,GACf,IAAMkH,EAAYvB,EAAkB3F,GACpCmE,EAAU+C,IA0HA7G,UApGI,SAACL,EAAIqC,GACnB,IAAM6E,EAAYlB,EAA2BhG,EAAIqC,GACjD8B,EAAU+C,IAmGA5G,WA5EK,SAAC0D,EAAUrB,EAAMT,GAChC,IAAMgF,EAAYjB,EAA0BjC,EAAUrB,EAAMT,GAC5DiC,EAAU+C,IA2EA1G,WAhCK,SAACuG,EAAO9F,GACvB,IAAMiG,EAAYJ,EAAkBC,EAAO9F,GAC3CkD,EAAU+C,UC/JHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,SAAAvH,GAAkD,IAA/CwH,EAAMxH,EAANwH,OAAQC,EAAMzH,EAANyH,OAAQC,EAAM1H,EAAN0H,OAAQC,EAAM3H,EAAN2H,OAAQC,EAAO5H,EAAP4H,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP9F,cAAC+F,IAAMC,WAAU,CAAA7H,SACf6B,cAACkC,EAAG,MAEN+D,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.ae02d48e.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {v4 as uuid} from 'uuid'\nimport \"./file.css\"\n\nconst File = ({id, name, children, tasks, onAdd, onAddTask, handleDrop, deleteBtn, editLiText}) => {\n    const [edit, setEdit] = useState(null)\n    const [value, setValue] = useState(\"\")\n    const [drop, setDrop] = useState(false)\n    const [color, setColor] = useState(false)\n\n    const enterHandler = (e) => {\n        if (e.target.value.trim() !== \"\") {\n            if (e.keyCode === 13) {\n                if (edit) {\n                    editLiText(edit, value)\n                    setValue('')\n                    setColor(false)\n                    setEdit(null)\n                } else {\n                    const newTask = {id: uuid(), name: value}\n                    onAddTask(id, newTask)\n                    setValue('')\n                    setColor(false)\n                }\n\n            }\n        } else {\n            setColor(false)\n        }\n\n    }\n\n    const onDragStart = (e, task) => {\n        e.dataTransfer.setData('task', JSON.stringify(task))\n    }\n\n    const onDrop = (e) => {\n        const task = JSON.parse(e.dataTransfer.getData('task'));\n        handleDrop(id, task, e.nativeEvent.target)\n        setDrop(false)\n    }\n\n    const onDragOver = (e) => {\n        e.preventDefault();\n        setDrop(true)\n    }\n\n    const dragLeaveHandler = () => {\n        setDrop(false)\n    }\n\n    return (\n        <div className=\"file\"\n             onClick={() => setColor(false)}\n        >\n            <div className={`file-border ${color && \"show\"}`}\n                 onClick={() => setColor(false)}\n            >\n                <span className=\"file-button\"\n                      onClick={() => onAdd(id)}>\n                    <i className=\"fas fa-plus-circle\"/>\n                </span>\n\n                <span className=\"delete-btn\"\n                      onClick={() => deleteBtn(id)}\n                ><i className=\"fas fa-minus\"/>\n                </span>\n\n                <p className=\"page-name\">\n                    {name}\n                </p>\n                <input\n                    className=\"name\"\n                    value={value}\n                    onKeyUp={(e) => enterHandler(e)}\n                    onClick={(e) => e.stopPropagation()}\n                    onChange={(e) => {\n                        setColor(true)\n                        setValue(e.target.value)\n                    }}\n                />\n                <ul className={`${drop && \"dropped\"}`}\n                    onDrop={onDrop}\n                    onDragOver={onDragOver}\n                    onDragLeave={dragLeaveHandler}\n                >\n                    {tasks?.map((item, index) => {\n                        return <li\n                            key={index}\n                            id={item.id}\n                            draggable={true}\n                            className={`${color && \"show\"}`}\n                            onDragStart={(e) => onDragStart(e, item)}\n                        >\n                            <span>\n                                {item.name}\n                            </span>\n                            <span>\n                                <i className=\"far fa-edit\"\n                                   onClick={() => {\n                                       setEdit(item.id)\n                                       editLiText(item)\n                                       setValue(item.name)\n                                   }}/>\n                            </span>\n                        </li>\n                    })}\n                </ul>\n            </div>\n            {!!children &&\n            <div className=\"files\">\n                {children.map((item, idx) => {\n                    return <File {...item}\n                                 key={idx}\n                                 onAdd={onAdd}\n                                 deleteBtn={deleteBtn}\n                                 onAddTask={onAddTask}\n                                 handleDrop={handleDrop}\n                                 editLiText={editLiText}\n                    />\n                })}\n            </div>\n            }\n        </div>\n    );\n};\n\nexport default File;","import {v4 as uuid} from \"uuid\";\n\nexport let tree =  {\n    id: uuid(),\n        name: \"Page\",\n    children: [\n    {id: uuid(), parentId: 1, name: \"Page\"},\n    {id: uuid(), parentId: 1, name: \"Page\"},\n    {id: uuid(), parentId: 1, name: \"Page\"},\n    {\n        id: uuid(),\n        parentId: 1,\n        name: \"Page\",\n        children: [\n            {\n                id: uuid(),\n                parentId: 5,\n                name: \"Page\",\n            }\n        ]\n    },\n\n],\n    tasks: []\n}","import React, {useState} from \"react\"\nimport {v4 as uuid} from 'uuid'\nimport File from \"./componet/file/File\"\n\nimport {tree} from \"./helpers/suffix\";\n\n\nfunction App() {\n    const [suffix, setSuffix] = useState(tree);\n\n    const clone = (item) => {\n        if (!item) {\n            return item;\n        }\n        let types = [Number, String, Boolean],\n            result;\n\n        types.forEach(function (type) {\n            if (item instanceof type) {\n                result = type(item);\n            }\n        });\n\n        if (typeof result == \"undefined\") {\n            if (Object.prototype.toString.call(item) === \"[object Array]\") {\n                result = [];\n                item.forEach(function (child, index, array) {\n                    result[index] = clone(child);\n                });\n            } else if (typeof item == \"object\") {\n                if (item.nodeType && typeof item.cloneNode == \"function\") {\n                    result = item.cloneNode(true);\n                } else if (!item.prototype) {\n                    if (item instanceof Date) {\n                        result = new Date(item);\n                    } else {\n                        result = {};\n                        for (let i in item) {\n                            result[i] = clone(item[i]);\n                        }\n                    }\n                }\n            } else {\n                result = item;\n            }\n        }\n\n        return result;\n    }\n\n    const onAdd = (id) => {\n        const newSuffix = remapCurrentSuffix(id)\n        setSuffix(newSuffix)\n    }\n    const remapCurrentSuffix = (parentId) => {\n        const tempSuffix = clone(suffix)\n        const recursiveMap = (level) => {\n            if (level.id === parentId) {\n                if (level.children) {\n                    level.children.push({id: uuid(), parentId: 1, name: \"Page\"})\n                } else {\n                    level.children = [{id: uuid(), parentId: 1, name: \"Page\"}]\n                }\n            } else {\n                if (level.children) {\n                    level.children.forEach((elem) => {\n                        recursiveMap(elem)\n                    })\n                }\n            }\n        }\n        recursiveMap(tempSuffix)\n        return tempSuffix\n    }\n\n    const deleteBtn = (id) => {\n        const newSuffix = deleteBtnInSuffix(id)\n        setSuffix(newSuffix)\n    }\n    const deleteBtnInSuffix = (id) => {\n        const tempSuffix = clone(suffix)\n        const recursiveMap = (level)=> {\n            const founded = level?.children?.find((el)=>el.id === id)\n            if(founded){\n               level.children = level.children.filter((el)=> el.id !== id)\n            }else{\n                if(level.children){\n                    level.children.forEach((elem)=>{\n                        return recursiveMap(elem)\n                    })\n                }\n            }\n        }\n\n\n        recursiveMap(tempSuffix)\n        return tempSuffix\n    }\n\n    const onAddTask = (id, newTask) => {\n        const newSuffix = remapCurrentSuffixForTasks(id, newTask);\n        setSuffix(newSuffix)\n    }\n    const remapCurrentSuffixForTasks = (parentId, newTask) => {\n        const tempSuffix = clone(suffix)\n        const recursiveMap = (level) => {\n            if (level.id === parentId) {\n                if (level.tasks) {\n                    level.tasks.push(newTask)\n                } else {\n                    level.tasks = [newTask]\n                }\n            } else {\n                if (level.children) {\n                    level.children.forEach((elem) => {\n                        recursiveMap(elem)\n                    })\n                }\n            }\n        }\n        recursiveMap(tempSuffix)\n        return tempSuffix\n    }\n\n    const handleDrop = (parentId, task, target) => {\n        const newSuffix = remapCurrentSuffixForDrop(parentId, task, target);\n        setSuffix(newSuffix)\n    }\n    const remapCurrentSuffixForDrop = (parentId, task, target) => {\n\n        const removeTask = (level) => {\n            const funded = level.tasks?.find((t) => t.id === task.id)\n            if (funded) {\n                level.tasks = level.tasks.filter((t) => t.id !== funded.id)\n            } else {\n                if (level.children) {\n                    level.children.forEach((elem) => {\n                        removeTask(elem)\n                    })\n                }\n            }\n\n        }\n\n        const onDropTask = (level) => {\n                if (level.id === parentId) {\n                if (level.tasks) {\n                    const ul = target.parentElement;\n                    const childs = ul.querySelectorAll('li')\n                    const index = Array.prototype.findIndex.call(childs, (li) => li.id === target.id);\n                    level.tasks.splice(index, 0, task)\n                } else {\n                    level.tasks = [task]\n                }\n            } else {\n                if (level.children) {\n                    level.children.forEach((elem) => {\n                        onDropTask(elem, task)\n                    })\n                }\n            }\n        }\n\n        const tempSuffix = clone(suffix)\n        removeTask(tempSuffix)\n        onDropTask(tempSuffix)\n        return tempSuffix;\n    }\n\n    const editLiText = (editId,value)=> {\n        const newSuffix = editLiTextHandler(editId,value);\n        setSuffix(newSuffix)\n    }\n    const editLiTextHandler = (editId,value)=> {\n         const tempSuffix = clone(suffix)\n\n        const recursiveMap = (level) => {\n             const founded = level.tasks?.find((el)=>el.id === editId)\n            if (founded) {\n                founded.name = value\n            } else {\n                if (level.children) {\n                    level.children.forEach((elem) => {\n                        recursiveMap(elem)\n                    })\n                }\n            }\n        }\n        recursiveMap(tempSuffix)\n        return tempSuffix\n\n    }\n\n\n    return (\n        <div className=\"App\">\n            <File {...suffix}\n                  onAdd={onAdd}\n                  deleteBtn={deleteBtn}\n                  onAddTask={onAddTask}\n                  handleDrop={handleDrop}\n                  editLiText={editLiText}/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}